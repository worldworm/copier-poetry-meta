[tool.poetry]
name = "{{ package_distribution_name }}"
version = "0.1.0"
description = "{{ project_description }}"
authors = ["{{ repository_username }}"]
readme = "README.md"
repository = "{{ repository_url }}"
homepage = "{{ repository_url }}"
{{ "" if copyright_license == "None" else 'license = "' ~ copyright_license ~ '"' }}
keywords = []
packages = [{include = "{{ package_import_name }}"}]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
loguru = "^0.7.2"
{% if use_dotenv -%}
pydantic-settings = "^2.0.3"
{% endif -%}
{% if use_database -%}
sqlmodel = "^0.0.14"
{% if use_database_migrations -%}
alembic = "^1.13.1"
{% endif -%}
{% if database_type == "postgres" -%}
psycopg2-binary = "^2.9.9"
{% endif -%}
{% if database_type == "mysql" -%}
pymysql = "^1.1.0"
{% endif -%}
{% endif %}
[tool.poetry.group.dev.dependencies]
pre-commit = "^3.2.1"
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
pylint = "^2.17.4"
poethepoet = "^0.24.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.autopep8]
max_line_length = 150

[tool.isort]
line_length = 150

[tool.poe.poetry_hooks]
post_install = "pre-commit-install"

[tool.poe.tasks]
run = "python -m {{ package_import_name }}.main"
lint = "pylint {{ package_import_name }}"
test = "pytest"
cov = "pytest --cov={{ package_import_name }} --cov-report term --cov-report xml:coverage.xml"
clean = "rm -rf ./**/*.pyc ./**/__pycache__ coverage.xml .coverage"
pre-commit-install.shell = "[ -d .git ] && poetry run pre-commit install --install-hooks || ( [ ! -d .git ] && echo 'Skipping pre-commit install because this is not a git repository!' )"
pre-commit-run = "pre-commit run --all-files"
{% if use_database_migrations -%}
migrate = "alembic upgrade head"

[tool.poe.tasks.revision]
cmd = "alembic revision --autogenerate --message ${message}"
args = [{name = "message", required = true, type = "string"}]
{% endif %}